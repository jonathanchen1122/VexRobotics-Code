#pragma config(Motor,  port2,           LeftWheel,     tmotorServoContinuousRotation, openLoop)
#pragma config(Motor,  port3,           RightWheel,    tmotorServoContinuousRotation, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

task main()
{
	int	x =	-127;
	while(1==1)
	{
		float y = (x - (x/18.1428571429));
		float z = x/4.23333333333;

		if(vexRT[Btn8U] == 1)	// adjustment slower
		{
			x = -127;
		}
		else if(vexRT[Btn8D] == 1)	// adjustment faster
		{
			x = -70;
		}
		else if(vexRT[Btn8L] == 1)	// adjustment slower
		{
			x = -100;
		}
		else if(vexRT[Btn8R] == 1)	// adjustment faster
		{
			x = -30;
		}
		if(vexRT[Btn7U] == 1) // forword
		{
			motor[RightWheel] = x;
			motor[LeftWheel] = x;
			wait1Msec(1000);
			motor[RightWheel] = 0;
			motor[LeftWheel] = 0;
		}
		else if(vexRT[Btn7D] == 1)  //  Backward
		{
			motor[RightWheel] = -x;
			motor[LeftWheel] = -x;
			wait1Msec(1000);
			motor[RightWheel] = 0;
			motor[LeftWheel] = 0;
		}
		else if(vexRT[Btn7D] == 0||vexRT[Btn7U] == 0)
		{
			if(vexRT[Btn6U] == 1)	//rotate right
			{
				motor[RightWheel] = -y;
				motor[LeftWheel] =  y;
				wait1Msec(1000);
				motor[RightWheel] = 0;
				motor[LeftWheel] = 0;
			}
			if(vexRT[Btn5U] == 1)	//rotate left
			{
				motor[RightWheel] = y;
				motor[LeftWheel] =  -y;
				wait1Msec(1000);
				motor[RightWheel] = 0;
				motor[LeftWheel] = 0;
			}
			if(vexRT[Btn6D] == 1)	//rotate right slower
			{
				motor[RightWheel] = -z;
				motor[LeftWheel] = z;
				wait1Msec(1000);
				motor[RightWheel] = 0;
				motor[LeftWheel] = 0;
			}
			if(vexRT[Btn5D] == 1)	//rotate left slower
			{
				motor[RightWheel] = z;
				motor[LeftWheel] = -z;
				wait1Msec(1000);
				motor[RightWheel] = 0;
				motor[LeftWheel] = 0;
			}
		}
	}
}
